#!/usr/bin/env python
import rospy
import sys
import argparse
from sub8_alarm import single_alarm, AlarmListener, AlarmBroadcaster
from sub8_ros_tools.init_helpers import wait_for_subscriber


if __name__ == '__main__':
    usage_msg = ("Pass the name of an active alarm, and this script will clear it. Say 'all' to clear all alarms")
    desc_msg = "Clear an alarm"

    parser = argparse.ArgumentParser(usage=usage_msg, description=desc_msg)
    parser.add_argument(dest='alarm_name',
                        help="The alarm name you'd like to clear")

    args = parser.parse_args(sys.argv[1:])
    rospy.init_node('alarm_clear')
    if args.alarm_name == 'all':
        listener = AlarmListener()
        broadcaster = AlarmBroadcaster()
        alarms = []
        rospy.logwarn("Waiting for alarms...")
        rospy.sleep(1.0)

        rospy.logwarn(listener.known_alarms)
        for alarm_name in listener.known_alarms:
            alarms.append(broadcaster.add_alarm(alarm_name, action_required=True))

        rospy.sleep(1.0)

        for alarm in alarms:
            alarm.clear_alarm()
            rospy.logwarn("Clearing {}".format(alarm._alarm_name))

    else:
        broadcaster, alarm = single_alarm(args.alarm_name, action_required=True)

        rospy.logwarn("Creating alarm publisher....")
        # Wait until subscription lands
        rospy.sleep(0.5)
        alarm.clear_alarm()
