#!/usr/bin/python

import rospy
from rosgraph_msgs.msg import Clock
import ctypes, os
import time


CLOCK_MONOTONIC_RAW = 4  # see <linux/time.h>

class timespec(ctypes.Structure):
    _fields_ = [
        ('tv_sec', ctypes.c_long),
        ('tv_nsec', ctypes.c_long)
    ]

librt = ctypes.CDLL('librt.so.1', use_errno=True)
clock_gettime = librt.clock_gettime
clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]

def monotonic_time():
    t = timespec()
    if clock_gettime(CLOCK_MONOTONIC_RAW, ctypes.pointer(t)) != 0:
        errno_ = ctypes.get_errno()
        raise OSError(errno_, os.strerror(errno_))
    return t.tv_sec + t.tv_nsec * 1e-9

rospy.init_node("clock_pub")
pub = rospy.Publisher('/clock', Clock, queue_size=10)
t0 = monotonic_time() - 10  # start at a nonzero time to not break anything

while not rospy.is_shutdown():
    time.sleep(1e-2)
    pub.publish(Clock(rospy.Time.from_sec(monotonic_time() - t0)))
